#BlueJ class context
comment0.params=
comment0.target=StateManager()
comment0.text=\n\ \n
comment1.params=
comment1.target=void\ genResPath()
comment10.params=f
comment10.target=void\ setTestFile(java.io.File)
comment11.params=
comment11.target=java.lang.String\ runExerciseTests()
comment12.params=
comment12.target=java.util.ArrayList\ getExerciseList()
comment12.text=\n\ Initializes\ the\ exercise\ list.\n\ @return\ exercises\ -\ the\ list\ of\ exercises.\n
comment13.params=
comment13.target=void\ createTestResultsGUI()
comment13.text=\n\ Creates\ the\ GUI\ showing\ the\ JUnit\ tests\ for\ the\ exercise.\n
comment14.params=
comment14.target=void\ run()
comment15.params=
comment15.target=void\ createDescriptionGUI()
comment15.text=\n\ creates\ the\ GUI\ for\ the\ description\ of\ the\ exercise.\n
comment16.params=
comment16.target=void\ run()
comment17.params=
comment17.target=void\ createExerciseListGUI()
comment17.text=\n\ Creates\ the\ GUI\ for\ picking\ an\ exercise.\n
comment18.params=
comment18.target=void\ run()
comment19.params=
comment19.target=void\ disposeDescriptionGUI()
comment19.text=\n\ disposes\ testGUI\ and\ descriptionGUI\n
comment2.params=
comment2.target=java.lang.String\ getResPath()
comment20.params=
comment20.target=void\ disposeTestResultsGUI()
comment20.text=\n\ disposes\ testGUI\ and\ descriptionGUI\n
comment3.params=path
comment3.target=void\ openBProject(java.lang.String)
comment3.text=\n\ \n
comment4.params=
comment4.target=void\ createBProject()
comment4.text=\n\ \n
comment5.params=
comment5.target=void\ populateCurrentProject()
comment5.text=\n\ \n
comment6.params=
comment6.target=void\ parseExercises()
comment6.text=\n\ \n
comment7.params=
comment7.target=void\ initialize()
comment7.text=\n\ Method\ to\ initialize\ the\ exercise\ list.\n\ Currently\ hard\ coding\ exercise\ 1\ until\n\ parser\ is\ finished.\n
comment8.params=
comment8.target=StateManager\ getInstance()
comment8.text=\n\ \n
comment9.params=
comment9.target=void\ setupRunner()
numComments=21
